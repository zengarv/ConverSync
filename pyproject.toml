[project]
name = "conversync"
version = "0.1.0"
description = "AI-powered meeting assistant for automatic transcription, summarization, and minute generation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ConverSync Team", email = "conversync.ai@gmail.com"}
]
keywords = ["meeting", "transcription", "ai", "summarization", "pdf", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Communications :: Email",
    "Topic :: Text Processing :: Markup",
]
requires-python = ">=3.9"
dependencies = [
    "flask>=2.3.0",
    "groq>=0.4.0",
    "moviepy>=1.0.3",
    "google-generativeai>=0.3.0",
    "reportlab>=4.0.0",
    "python-dotenv>=1.0.0",
    "werkzeug>=2.3.0",
    "pathlib2>=2.3.7",
    "Pillow>=10.0.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-mock>=3.10.0",
    "requests-mock>=1.10.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://github.com/conversync/conversync"
Documentation = "https://conversync.readthedocs.io"
Repository = "https://github.com/conversync/conversync.git"
"Bug Tracker" = "https://github.com/conversync/conversync/issues"

[project.scripts]
conversync = "api.flask_app:main"
conversync-test = "main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["api", "config", "services", "utils"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["api", "config", "services"]
omit = [
    "*/tests/*",
    "*/test_*",
    "example_usage.py",
    "main.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ .__main__.:",
]
